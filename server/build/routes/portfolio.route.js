"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const portfolio_controller_1 = require("../controllers/portfolio.controller");
const auth_1 = require("../middleware/auth");
const portfolioRouter = express_1.default.Router();
portfolioRouter.post("/create-portfolio", auth_1.isAutheticated, portfolio_controller_1.createPortfolio);
portfolioRouter.put("/edit-portfolio", auth_1.isAutheticated, portfolio_controller_1.editPortfolio);
portfolioRouter.delete("/delete-portfolio", auth_1.isAutheticated, portfolio_controller_1.deletePortfolio);
portfolioRouter.post("/add-skills", auth_1.isAutheticated, portfolio_controller_1.addSkills);
portfolioRouter.put("/edit-skill/:skillId", auth_1.isAutheticated, portfolio_controller_1.editSkill);
portfolioRouter.delete("/delete-skill/:skillId", auth_1.isAutheticated, portfolio_controller_1.deleteSkill);
portfolioRouter.get("/get-skills", auth_1.isAutheticated, portfolio_controller_1.getAllSkills);
portfolioRouter.post("/create-category", auth_1.isAutheticated, portfolio_controller_1.createCategory);
portfolioRouter.put("/add-projects-to-category/:categoryId", auth_1.isAutheticated, portfolio_controller_1.addProjectsToCategory);
portfolioRouter.put("/update-category/:categoryId", auth_1.isAutheticated, portfolio_controller_1.updateCategory);
portfolioRouter.put("/update-project/:categoryId/:projectId", auth_1.isAutheticated, portfolio_controller_1.updateProject);
portfolioRouter.get("/get-categories", auth_1.isAutheticated, portfolio_controller_1.getAllCategories);
portfolioRouter.delete("/delete-project/:categoryId/:projectId", auth_1.isAutheticated, portfolio_controller_1.deleteProjectFromCategory);
portfolioRouter.delete("/delete-category/:categoryId", auth_1.isAutheticated, portfolio_controller_1.deleteCategory);
portfolioRouter.get("/get-portfolio", auth_1.isAutheticated, portfolio_controller_1.getPortfolioDash);
portfolioRouter.get("/get-portfolio/:userName", portfolio_controller_1.getPortfolio);
portfolioRouter.post("/contact", portfolio_controller_1.contact);
portfolioRouter.get("/get-contacts", auth_1.isAutheticated, portfolio_controller_1.getContacts);
portfolioRouter.post("/send-newsLetter", portfolio_controller_1.sendNewsLetter);
exports.default = portfolioRouter;
